<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EmailMapper">

	 <resultMap type="Email"   id="resultEmail">
	 	<result column="N_XH"   property="n_xh"/>
	 	<result column="C_BT"   property="c_bt"/>
	 	<result column="C_YHID" property="c_yhid"/>
	 	<result column="D_DJ"   property="d_dj"/>
	 	<result column="C_IP"   property="c_ip"/>
	 </resultMap>
	 
	 <resultMap type="Email"   id="resultEmailRecieve">
	 	<result column="C_YHID" property="c_yhid"/>
	 	<result column="C_ZT"   property="c_zt"/>
	 </resultMap>
	 
	<select id="getEmail" parameterType="Email" resultType="Email">
		SELECT * FROM B_NBYJ WHERE N_XH = #{n_xh}
	</select>
	 
	<select id="getEmailList" resultMap="resultEmail" parameterType="string">
		SELECT N_XH,
		       C_BT,
		       TO_CHAR(D_DJ,'YYYY-MM-DD hh24:MI:SS') D_DJ,
		       C_YHID,
		       C_IP
		FROM B_NBYJ
		  WHERE C_ZT = #{c_zt}
	</select>
	
	
	<select id="getEmailRecieveList" resultMap="resultEmail" parameterType="string">
		SELECT N_XH,
		       C_BT,
		       TO_CHAR(D_DJ,'YYYY-MM-DD hh24:MI:SS') D_DJ,
		       C_YHID,
		       C_IP
		FROM B_NBYJ B
		  WHERE EXISTS (SELECT '1'
				          FROM B_NBYJ_RECIEVE R
				         WHERE R.N_NBYJXH = B.N_XH
				           AND R.C_JSR = #{c_yhid})
	</select>
	
	<select id="getEmailNoReadList" resultMap="resultEmail" parameterType="string">
		SELECT N_XH,
		       C_BT,
		       TO_CHAR(D_DJ,'YYYY-MM-DD hh24:MI:SS') D_DJ,
		       C_YHID,
		       C_IP
		FROM B_NBYJ B
		  WHERE EXISTS (SELECT '1'
				          FROM B_NBYJ_RECIEVE R
				         WHERE R.N_NBYJXH = B.N_XH
				           AND R.C_JSR = #{c_yhid} AND R.C_ZT = '1')
	</select>
	
	<delete id="deleteEmail" parameterType="int">
		DELETE FROM B_NBYJ WHERE N_XH = #{n_xh}
	</delete>
	
	<insert id="insertEmail" parameterType="hashmap">
		 INSERT INTO B_NBYJ(
		   N_XH     ,
		   C_BT     ,
		   C_YHID   ,
		   C_YHZID  ,
		   C_NR     ,
		   C_IP     ,
		   C_SFSC   , 
		   C_ZT     ,
		   D_DJ    ) 
		VALUES (	            	
		     seq_b_nbyj.nextval,  
		     #{c_bt,jdbcType=VARCHAR},
	         #{c_yhid,jdbcType=VARCHAR},   
	         #{c_yhzid,jdbcType=VARCHAR},          
	         #{c_nr,javaType=String,jdbcType=CLOB,handler=ClobTypeHandler}, 
	         #{c_ip,jdbcType=VARCHAR},
	         #{c_sfsc,jdbcType=VARCHAR},
	         #{c_zt,jdbcType=VARCHAR},
	       	 sysdate      
	    )
	</insert>
	
	<insert id="insertEmailRecieve" parameterType="hashmap">
		BEGIN
		<foreach collection="list" item="item" separator=";">
			INSERT INTO B_NBYJ_RECIEVE 
				(N_XH,N_NBYJXH,C_JSR,C_LX,C_ZT)
			VALUES
				(
					seq_b_nbyj_recieve.nextval,
					seq_b_nbyj.currval,
					#{item.c_yhid},#{item.c_lx},'1'
			    )
		</foreach>
		; END;
	</insert>
	
	<update id="updateEmail" parameterType="Email">
		UPDATE B_NBYJ
		   SET  C_BT   =	#{c_bt,jdbcType=VARCHAR},							   							
				C_NR     =	#{c_nr,jdbcType=CLOB,handler=ClobTypeHandler}							
		WHERE N_XH = #{n_xh}
	</update>
	
	<select id="getEmailQsqkList" parameterType="string" resultMap="resultEmailRecieve">
	 SELECT C_JSR C_YHID, DECODE(C_ZT, '1', '未签收', '2', '已签收', '已删除') C_ZT
	  FROM B_NBYJ_RECIEVE
	 WHERE N_NBYJXH = #{n_xh}
	</select>
	
</mapper>